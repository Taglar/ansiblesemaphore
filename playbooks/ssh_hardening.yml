---
- name: SSH Hardening und Benutzeranlage
  hosts: LinuxUbuntu
  become: true
  become_method: sudo

  vars:
    juergen_user: juergen
    juergen_group: juergen
    sudoers_file: "/etc/sudoers.d/90-juergen"
    sshd_config_path: "/etc/ssh/sshd_config"

  tasks:

    - name: Stelle sicher, dass das Paket sudo vorhanden ist
      apt:
        name: sudo
        state: present
        update_cache: yes

    - name: Benutzer "{{ juergen_user }}" anlegen
      user:
        name: "{{ juergen_user }}"
        password: "{{ juergen_password | password_hash('sha512') }}"
        shell: /bin/bash
        create_home: yes
        groups: sudo
        append: yes

    - name: Authorized_keys Verzeichnis anlegen
      file:
        path: "/home/{{ juergen_user }}/.ssh"
        state: directory
        owner: "{{ juergen_user }}"
        group: "{{ juergen_group }}"
        mode: '0700'

    - name: SSH Public Key hinterlegen
      copy:
        dest: "/home/{{ juergen_user }}/.ssh/authorized_keys"
        content: "{{ SSH_PUBLIC_KEY }}"
        owner: "{{ juergen_user }}"
        group: "{{ juergen_group }}"
        mode: '0600'

    - name: Sudo-Rechte f√ºr juergen hinzuf√ºgen (ohne Passwort)
      copy:
        dest: "{{ sudoers_file }}"
        content: "{{ juergen_user }} ALL=(ALL) NOPASSWD:ALL"
        owner: root
        group: root
        mode: '0440'

    - name: Root-Login und Passwort-Authentifizierung deaktivieren
      lineinfile:
        path: "{{ sshd_config_path }}"
        regexp: '^#?PermitRootLogin'
        line: 'PermitRootLogin no'
        state: present
        backrefs: yes

    - name: Passwort-Authentifizierung deaktivieren
      lineinfile:
        path: "{{ sshd_config_path }}"
        regexp: '^#?PasswordAuthentication'
        line: 'PasswordAuthentication no'
        state: present
        backrefs: yes

    - name: SSH-Dienst neu starten
      service:
        name: ssh
        state: restarted

    - name: Pr√ºfen, ob SSH-Dienst aktiv ist
      shell: systemctl is-active ssh
      register: ssh_status
      changed_when: false

    - name: Ergebnis anzeigen
      debug:
        msg:
          - "‚úÖ SSH Hardening abgeschlossen."
          - "üë§ Benutzer '{{ juergen_user }}' wurde angelegt und mit SSH-Key versehen."
          - "üîí Root-Login ist deaktiviert."
          - "üì° SSH-Dienststatus: {{ ssh_status.stdout }}"

    # -------------------------------
    # Sicherheitspr√ºfung nach Hardening
    # -------------------------------
    - name: Warte kurz, bis SSH neu gestartet ist
      pause:
        seconds: 5

    - name: Teste SSH-Login mit Benutzer juergen (Key)
      delegate_to: localhost
      shell: >
        ssh -o BatchMode=yes -o ConnectTimeout=5 -i ~/.ssh/id_rsa {{ juergen_user }}@{{ inventory_hostname }} 'echo SSH_Login_OK'
      register: ssh_juergen_test
      failed_when: false
      changed_when: false

    - name: Teste SSH-Login mit Root (sollte fehlschlagen)
      delegate_to: localhost
      shell: >
        ssh -o BatchMode=yes -o ConnectTimeout=5 -i ~/.ssh/id_rsa root@{{ inventory_hostname }} 'echo Root_Login_OK'
      register: ssh_root_test
      failed_when: false
      changed_when: false

    - name: Zusammenfassung der SSH-Tests
      debug:
        msg:
          - "Test Login juergen: {{ '‚úÖ OK' if 'SSH_Login_OK' in ssh_juergen_test.stdout else '‚ùå FEHLGESCHLAGEN' }}"
          - "Test Login root: {{ '‚úÖ BLOCKIERT' if ssh_root_test.rc != 0 else '‚ùå NOCH ZUG√ÑNGLICH' }}"
          - "Hinweis: Wenn juergen fehlschl√§gt, bitte Key oder Firewall pr√ºfen."
