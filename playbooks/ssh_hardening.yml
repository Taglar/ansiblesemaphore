---
- name: SSH Hardening & Benutzeranlage
  hosts: Ohne_SSH_Key
  become: true
  gather_facts: true

  # Erzwinge Passwortauth für die erste Verbindung
  vars:
    ansible_ssh_common_args: "-o PreferredAuthentications=password -o PubkeyAuthentication=no"

    # Verbindungs-/Benutzerdaten ausschließlich aus Semaphore-Variablen & -Secrets
    ansible_user: "{{ SSH_INITIAL_USER }}"
    ansible_password: "{{ secrets.root_password }}"
    ansible_become_password: "{{ secrets.root_password }}"

    ssh_target_user: "{{ SSH_TARGET_USER }}"
    ssh_public_key: "{{ secrets.SSH_PUBLIC_KEY }}"
    # Generischer Ziel-Password-Name; fallback auf altes 'juergen_password', falls noch genutzt
    ssh_target_password: "{{ secrets.SSH_TARGET_PASSWORD | default(secrets.juergen_password) }}"

  tasks:
    # Sicherheitsnetz: brich ab, wenn Pflichtwerte fehlen
    - name: Preflight – prüfe erforderliche Variablen/Secrets
      assert:
        that:
          - SSH_INITIAL_USER is defined
          - SSH_TARGET_USER is defined
          - secrets.root_password is defined
          - secrets.SSH_PUBLIC_KEY is defined
          - (secrets.SSH_TARGET_PASSWORD is defined) or (secrets.juergen_password is defined)
        fail_msg: "Pflichtvariablen/Secrets fehlen (SSH_INITIAL_USER, SSH_TARGET_USER, root_password, SSH_PUBLIC_KEY, SSH_TARGET_PASSWORD|juergen_password)."

    - name: Info
      debug:
        msg:
          - "Verbinde als: {{ ansible_user }}"
          - "Zielbenutzer: {{ ssh_target_user }}"

    - name: Stelle sicher, dass 'sudo' installiert ist (Debian/Ubuntu)
      apt:
        name: sudo
        state: present
        update_cache: false
      when: ansible_os_family == "Debian"

    - name: Benutzer {{ ssh_target_user }} anlegen/aktualisieren
      user:
        name: "{{ ssh_target_user }}"
        password: "{{ ssh_target_password | password_hash('sha512') }}"
        shell: /bin/bash
        create_home: true
        groups: sudo
        append: true

    - name: .ssh-Verzeichnis anlegen
      file:
        path: "/home/{{ ssh_target_user }}/.ssh"
        state: directory
        owner: "{{ ssh_target_user }}"
        group: "{{ ssh_target_user }}"
        mode: '0700'

    - name: SSH Public Key hinterlegen
      copy:
        content: "{{ ssh_public_key }}"
        dest: "/home/{{ ssh_target_user }}/.ssh/authorized_keys"
        owner: "{{ ssh_target_user }}"
        group: "{{ ssh_target_user }}"
        mode: '0600'

    - name: Root-Login via SSH deaktivieren
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^#?PermitRootLogin'
        line: 'PermitRootLogin no'
        create: true
        backup: true
      notify: Restart SSH

    - name: Passwort-Login global erlauben (für Nicht-Root; Key-Auth bleibt aktiv)
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^#?PasswordAuthentication'
        line: 'PasswordAuthentication yes'
        create: true
        backup: true
      notify: Restart SSH

    - name: Zusammenfassung
      debug:
        msg:
          - "✅ Benutzer '{{ ssh_target_user }}' vorhanden & in sudo"
          - "✅ Public Key hinterlegt"
          - "✅ Root SSH-Login deaktiviert"

  handlers:
    - name: Restart SSH
      service:
        name: ssh
        state: restarted
