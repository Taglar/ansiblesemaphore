---
- name: SSH Hardening & Benutzeranlage
  hosts: Ohne_SSH_Key
  become: true
  gather_facts: yes

  vars:
    ssh_initial_user: "{{ SSH_INITIAL_USER }}"         # z. B. root
    ssh_target_user: "{{ SSH_TARGET_USER }}"           # z. B. juergen
    ssh_pubkey: "{{ secrets.SSH_PUBLIC_KEY }}"         # √∂ffentlicher SSH-Key
    ssh_target_password: "{{ secrets.juergen_password }}" # Passwort f√ºr neuen Benutzer

  tasks:

    - name: Sicherstellen, dass Python installiert ist (f√ºr Ansible)
      raw: |
        which python3 || (apt-get update -y && apt-get install -y python3)
      changed_when: false

    - name: Benutzer {{ ssh_target_user }} anlegen
      user:
        name: "{{ ssh_target_user }}"
        password: "{{ ssh_target_password | password_hash('sha512') }}"
        shell: /bin/bash
        create_home: yes
        state: present

    - name: Benutzer {{ ssh_target_user }} zu sudo hinzuf√ºgen
      user:
        name: "{{ ssh_target_user }}"
        groups: sudo
        append: yes

    - name: SSH-Verzeichnis f√ºr {{ ssh_target_user }} erstellen
      file:
        path: "/home/{{ ssh_target_user }}/.ssh"
        state: directory
        owner: "{{ ssh_target_user }}"
        group: "{{ ssh_target_user }}"
        mode: '0700'

    - name: Public-Key hinterlegen
      copy:
        dest: "/home/{{ ssh_target_user }}/.ssh/authorized_keys"
        content: "{{ ssh_pubkey }}"
        owner: "{{ ssh_target_user }}"
        group: "{{ ssh_target_user }}"
        mode: '0600'

    - name: Sudo ohne Passwort f√ºr {{ ssh_target_user }} erlauben
      copy:
        dest: "/etc/sudoers.d/{{ ssh_target_user }}"
        content: "{{ ssh_target_user }} ALL=(ALL) NOPASSWD:ALL"
        owner: root
        group: root
        mode: '0440'

    - name: Root-Login via SSH deaktivieren
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^PermitRootLogin'
        line: 'PermitRootLogin no'
        create: no
        backup: yes

    - name: Passwort-Login f√ºr alle Benutzer erlauben (nur f√ºr Debug, optional)
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^PasswordAuthentication'
        line: 'PasswordAuthentication yes'
        create: no
        backup: yes

    - name: SSH-Dienst neu starten
      service:
        name: ssh
        state: restarted

    - name: Zusammenfassung anzeigen
      debug:
        msg:
          - "‚úÖ SSH-Hardening abgeschlossen auf {{ inventory_hostname }}"
          - "üë§ Benutzer '{{ ssh_target_user }}' wurde angelegt."
          - "üîí Root-Login via SSH ist nun deaktiviert."
          - "üóùÔ∏è √ñffentlicher Key wurde unter /home/{{ ssh_target_user }}/.ssh/authorized_keys hinterlegt."
