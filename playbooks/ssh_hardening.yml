---
- name: SSH-HÃ¤rtung und Benutzeranlage
  hosts: LinuxUbuntu
  become: true
  become_method: sudo

  vars:
    ssh_user: "{{ SSH_USER | default('juergen') }}"
    ssh_password_plain: "{{ SSH_PASSWORD | default(omit) }}"
    ssh_public_key: "{{ SSH_PUBLIC_KEY | default('') }}"
    disable_password_auth: "{{ (ssh_public_key | length > 0) | bool }}"

  tasks:
    - name: Stelle sicher, dass sudo installiert ist
      ansible.builtin.apt:
        name: sudo
        state: present
        update_cache: false

    - name: Benutzer anlegen mit Passwort und Home-Verzeichnis
      ansible.builtin.user:
        name: "{{ ssh_user }}"
        comment: "Administrativer Benutzer"
        shell: /bin/bash
        create_home: true
        password: "{{ (ssh_password_plain | password_hash('sha512')) if ssh_password_plain is defined else omit }}"
        groups: sudo
        append: true

    - name: .ssh-Verzeichnis erstellen (falls Key vorhanden)
      ansible.builtin.file:
        path: "/home/{{ ssh_user }}/.ssh"
        state: directory
        owner: "{{ ssh_user }}"
        group: "{{ ssh_user }}"
        mode: '0700'
      when: ssh_public_key | length > 0

    - name: SSH-Key hinterlegen
      ansible.builtin.authorized_key:
        user: "{{ ssh_user }}"
        state: present
        key: "{{ ssh_public_key }}"
        manage_dir: false
      when: ssh_public_key | length > 0

    - name: Sudo-Rechte einrichten
      ansible.builtin.copy:
        dest: "/etc/sudoers.d/{{ ssh_user }}"
        content: "{{ ssh_user }} ALL=(ALL) NOPASSWD:ALL"
        owner: root
        group: root
        mode: '0440'
        validate: 'visudo -cf %s'

    - name: Root-Login deaktivieren
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^[#\s]*PermitRootLogin\s+.*'
        line: 'PermitRootLogin no'
        create: no
        backrefs: false

    - name: Passwort-Login deaktivieren (wenn Key vorhanden)
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^[#\s]*PasswordAuthentication\s+.*'
        line: 'PasswordAuthentication no'
        create: no
        backrefs: false
      when: disable_password_auth | bool

    - name: PubkeyAuthentication aktivieren
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^[#\s]*PubkeyAuthentication\s+.*'
        line: 'PubkeyAuthentication yes'
        create: no
        backrefs: false

    - name: SSH-Dienst neu starten
      ansible.builtin.service:
        name: ssh
        state: restarted

    - name: Zusammenfassung ausgeben
      ansible.builtin.debug:
        msg:
          - "âœ… Benutzer '{{ ssh_user }}' wurde angelegt oder aktualisiert."
          - "ğŸ”‘ SSH-Key: {{ 'hinterlegt' if (ssh_public_key | length > 0) else 'nicht gesetzt' }}"
          - "ğŸš« Root-Login: deaktiviert."
          - "ğŸ”’ PasswordAuthentication: {{ 'no' if (disable_password_auth | bool) else 'unverÃ¤ndert/erlaubt' }}"
