---
- hosts: Ohne_SSH_Key
  become: true
  become_method: sudo
  become_user: root

  vars:
    ssh_user: "{{ secrets.SSH_USER }}"
    ssh_pub_key: "{{ secrets.SSH_PUBLIC_KEY }}"
    juergen_password: "{{ secrets.juergen_password }}"
    root_password: "{{ secrets.root_password }}"

  tasks:

    - name: Prüfe Verbindung zum Host
      ping:

    - name: Stelle sicher, dass sudo installiert ist
      apt:
        name: sudo
        state: present
        update_cache: yes

    - name: Erstelle Benutzer {{ ssh_user }}
      user:
        name: "{{ ssh_user }}"
        password: "{{ juergen_password | password_hash('sha512') }}"
        groups: sudo
        shell: /bin/bash
        state: present
        create_home: yes

    - name: SSH-Verzeichnis für Benutzer {{ ssh_user }} anlegen
      file:
        path: "/home/{{ ssh_user }}/.ssh"
        state: directory
        owner: "{{ ssh_user }}"
        group: "{{ ssh_user }}"
        mode: '0700'

    - name: SSH-Key für Benutzer {{ ssh_user }} hinterlegen
      authorized_key:
        user: "{{ ssh_user }}"
        key: "{{ ssh_pub_key }}"
        state: present
        exclusive: false

    - name: Root-Login über SSH deaktivieren
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^PermitRootLogin'
        line: 'PermitRootLogin no'
        create: yes
        backup: yes
      notify: Neustart SSH

    - name: Passwortauthentifizierung deaktivieren (nur noch Key erlaubt)
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^PasswordAuthentication'
        line: 'PasswordAuthentication no'
        create: yes
        backup: yes
      notify: Neustart SSH

    - name: Sichere sudoers-Datei anlegen (ohne Passwort nötig für {{ ssh_user }})
      copy:
        dest: "/etc/sudoers.d/{{ ssh_user }}"
        content: "{{ ssh_user }} ALL=(ALL) NOPASSWD:ALL"
        owner: root
        group: root
        mode: '0440'

    - name: Root-Passwort setzen (optional, falls gesetzt)
      user:
        name: root
        password: "{{ root_password | password_hash('sha512') }}"
      when: root_password is defined and root_password | length > 0

  handlers:
    - name: Neustart SSH
      service:
        name: ssh
        state: restarted
