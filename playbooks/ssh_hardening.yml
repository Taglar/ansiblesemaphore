---
- name: SSH Hardening & Benutzeranlage
  hosts: Ohne_SSH_Key
  become: true
  gather_facts: yes

  vars:
    # Ziel-Benutzername NICHT hardcoden ‚Äî kommt aus Variablen/Secrets in Semaphore:
    ssh_target_user: "{{ SSH_USER }}"
    ssh_pubkey: "{{ secrets.SSH_PUBLIC_KEY }}"
    ssh_target_password: "{{ secrets.juergen_password }}"

  tasks:
    - name: (Bootstrap) Stelle sicher, dass python3 vorhanden ist (f√ºr Ansible)
      raw: |
        command -v python3 >/dev/null 2>&1 || (apt-get update -y && apt-get install -y python3)
      changed_when: false

    - name: Benutzer {{ ssh_target_user }} anlegen (mit Passwort, Shell, Home)
      user:
        name: "{{ ssh_target_user }}"
        password: "{{ ssh_target_password | password_hash('sha512') }}"
        shell: /bin/bash
        create_home: yes
        state: present

    - name: {{ ssh_target_user }} zur sudo-Gruppe hinzuf√ºgen
      user:
        name: "{{ ssh_target_user }}"
        groups: sudo
        append: yes

    - name: ~/.ssh Verzeichnis erstellen
      file:
        path: "/home/{{ ssh_target_user }}/.ssh"
        state: directory
        owner: "{{ ssh_target_user }}"
        group: "{{ ssh_target_user }}"
        mode: '0700'

    - name: Public Key in authorized_keys schreiben
      copy:
        content: "{{ ssh_pubkey }}"
        dest: "/home/{{ ssh_target_user }}/.ssh/authorized_keys"
        owner: "{{ ssh_target_user }}"
        group: "{{ ssh_target_user }}"
        mode: '0600'

    - name: Sudo ohne Passwort f√ºr {{ ssh_target_user }} erlauben
      copy:
        dest: "/etc/sudoers.d/{{ ssh_target_user }}"
        content: "{{ ssh_target_user }} ALL=(ALL) NOPASSWD:ALL"
        owner: root
        group: root
        mode: '0440'

    # SSH-Hardening
    - name: Root-Login via SSH deaktivieren
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^#?\s*PermitRootLogin'
        line: 'PermitRootLogin no'
        state: present
        backup: yes

    - name: PubkeyAuthentication aktivieren
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^#?\s*PubkeyAuthentication'
        line: 'PubkeyAuthentication yes'
        state: present

    # Optional: vorerst Passwort-Login erlauben (f√ºr Notzugang), sp√§ter wieder deaktivieren
    - name: PasswordAuthentication (tempor√§r) aktivieren
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^#?\s*PasswordAuthentication'
        line: 'PasswordAuthentication yes'
        state: present

    - name: SSH-Dienst neu starten
      service:
        name: ssh
        state: restarted

    - name: Zusammenfassung
      debug:
        msg:
          - "‚úÖ SSH-Hardening abgeschlossen auf {{ inventory_hostname }}"
          - "üë§ Benutzer '{{ ssh_target_user }}' wurde angelegt (sudo, NOPASSWD)."
          - "üóùÔ∏è Key in /home/{{ ssh_target_user }}/.ssh/authorized_keys"
          - "üîí Root-Login via SSH: deaktiviert"
          - "üîß PasswordAuthentication: YES (tempor√§r; kann sp√§ter wieder auf NO)"
